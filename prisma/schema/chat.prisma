model Chat {
    id           String        @id @unique @default(cuid())
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    title        String?
    emoji        String?
    userId       String
    isFavorite   Boolean       @default(false)
    focusMode    FocusMode
    modelType    ModelType
    imageResults ImageResult[]
    videoResults VideoResult[]
    sharedLink   SharedLink?
    user         User          @relation(fields: [userId], references: [id])
    messages     Message[]
}

model SharedLink {
    id           String   @id @unique @default(cuid())
    createdAt    DateTime @default(now())
    requiredAuth Boolean  @default(true)
    enabled      Boolean  @default(true)
    chatId       String   @unique
    views        Int      @default(0)
    chat         Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Message {
    id               String   @id @unique @default(cuid())
    createdAt        DateTime @default(now())
    pending          Boolean
    rewriteRequested Boolean?
    content          String?
    chatId           String
    chat             Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
    role             ChatRole
    sources          Source[]
    suggestions      String[]
    metadata         Json?
    aiModel          String?
}

model ImageResult {
    id           String @id @unique @default(cuid())
    title        String
    url          String
    thumbnailUrl String
    imageUrl     String
    content      String
    chatId       String
    chat         Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model VideoResult {
    id           String  @id @unique @default(cuid())
    title        String
    url          String
    iframeSrc    String
    thumbnailUrl String
    length       String?
    views        String?
    chatId       String
    chat         Chat    @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Source {
    id            String   @id @unique @default(cuid())
    accessedAt    DateTime @default(now())
    url           String
    title         String
    pageContent   String
    messageId     String
    imageUrl      String?
    faviconUrl    String?
    message       Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
    originalIndex Int
}

enum ModelType {
    Speed
    Balanced
    Quality
}

enum FocusMode {
    All
    Academic
    Writing
    WolframAlpha
    Youtube
    Reddit
}

enum ChatRole {
    Assistant
    User
}
